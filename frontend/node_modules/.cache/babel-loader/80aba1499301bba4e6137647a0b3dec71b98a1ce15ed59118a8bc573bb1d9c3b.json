{"ast":null,"code":"var _jsxFileName = \"D:\\\\BarbaricSplendorWebsite\\\\frontend\\\\src\\\\Context\\\\ShopContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch(\"http://localhost:4000/allproducts\").then(res => res.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/getcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: \"\"\n      }).then(res => res.json()).then(data => setCartItems(data));\n    }\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/addtocart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItems = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItems += cartItems[item];\n      }\n    }\n    return totalItems;\n  };\n  const getTotalProducts = props => {\n    let totalProducts = 0;\n    for (const item in all_product) {\n      if (props.category === item.category) {\n        totalProducts += 1;\n      } else {\n        totalProducts += 0;\n      }\n    }\n    return totalProducts;\n  };\n  const contextValue = {\n    getTotalProducts,\n    getTotalCartItems,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","res","json","data","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","prev","JSON","stringify","console","log","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","price","getTotalCartItems","totalItems","getTotalProducts","totalProducts","category","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BarbaricSplendorWebsite/frontend/src/Context/ShopContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from \"react\";\r\n\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = ()=>{\r\n    let cart = {};\r\n    for (let index=0; index < 300+1; index++){\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props)=>{\r\n\r\n    const [all_product, setAll_Product] = useState([]);\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(()=>{\r\n        fetch(\"http://localhost:4000/allproducts\")\r\n        .then((res)=>res.json())\r\n        .then((data)=>setAll_Product(data))\r\n\r\n        if(localStorage.getItem(\"auth-token\")){\r\n            fetch(\"http://localhost:4000/getcart\", {\r\n                method:\"POST\",\r\n                headers:{\r\n                    Accept:\"application/form-data\",\r\n                    \"auth-token\":`${localStorage.getItem(\"auth-token\")}`,\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body:\"\",\r\n            }).then((res)=>res.json())\r\n            .then((data)=>setCartItems(data));\r\n        }\r\n    },[])\r\n\r\n    const addToCart = (itemId)=>{\r\n        setCartItems((prev)=>({...prev, [itemId]:prev[itemId] +1}));\r\n        if(localStorage.getItem(\"auth-token\")){\r\n            fetch(\"http://localhost:4000/addtocart\",{\r\n                method:\"POST\",\r\n                headers:{\r\n                    Accept:\"application/form-data\",\r\n                    \"auth-token\":`${localStorage.getItem(\"auth-token\")}`, \r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((res)=>res.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    }\r\n\r\n    const removeFromCart = (itemId)=>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}));\r\n        if(localStorage.getItem(\"auth-token\")){\r\n            fetch(\"http://localhost:4000/removefromcart\",{\r\n                method:\"POST\",\r\n                headers:{\r\n                    Accept:\"application/form-data\",\r\n                    \"auth-token\":`${localStorage.getItem(\"auth-token\")}`, \r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((res)=>res.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    };\r\n\r\n    const getTotalCartAmount = ()=>{\r\n        let totalAmount=0;\r\n        for(const item in cartItems)\r\n        {\r\n            if(cartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item));\r\n                totalAmount+= itemInfo.price*cartItems[item];\r\n            }\r\n        }\r\n        return totalAmount;\r\n    };\r\n\r\n    const getTotalCartItems = ()=>{\r\n        let totalItems = 0;\r\n        for(const item in cartItems)\r\n        {\r\n            if(cartItems[item]>0)\r\n            {\r\n                totalItems += cartItems[item];\r\n            }\r\n        }\r\n        return totalItems;\r\n    };\r\n\r\n    const getTotalProducts = (props)=>{\r\n        let totalProducts = 0;\r\n        for(const item in all_product)\r\n        {\r\n            if(props.category===item.category)\r\n                {\r\n                totalProducts += 1;\r\n            }\r\n            else{\r\n                totalProducts +=0;\r\n            }\r\n            \r\n        }\r\n        return totalProducts;\r\n    };\r\n\r\n    const contextValue = { getTotalProducts, getTotalCartItems, all_product, cartItems, addToCart, removeFromCart, getTotalCartAmount};\r\n\r\n    \r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}